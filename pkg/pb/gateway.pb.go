// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WorkflowRequestObject_ResourceType int32

const (
	// FILE type means the gateway will try to detect the resource type
	// using the file extension of the name field
	WorkflowRequestObject_FILE WorkflowRequestObject_ResourceType = 0
	WorkflowRequestObject_BPMN WorkflowRequestObject_ResourceType = 1
	WorkflowRequestObject_YAML WorkflowRequestObject_ResourceType = 2
)

var WorkflowRequestObject_ResourceType_name = map[int32]string{
	0: "FILE",
	1: "BPMN",
	2: "YAML",
}

var WorkflowRequestObject_ResourceType_value = map[string]int32{
	"FILE": 0,
	"BPMN": 1,
	"YAML": 2,
}

func (x WorkflowRequestObject_ResourceType) String() string {
	return proto.EnumName(WorkflowRequestObject_ResourceType_name, int32(x))
}

func (WorkflowRequestObject_ResourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{12, 0}
}

// Describes the Raft role of the broker for a given partition
type Partition_PartitionBrokerRole int32

const (
	Partition_LEADER   Partition_PartitionBrokerRole = 0
	Partition_FOLLOWER Partition_PartitionBrokerRole = 1
)

var Partition_PartitionBrokerRole_name = map[int32]string{
	0: "LEADER",
	1: "FOLLOWER",
}

var Partition_PartitionBrokerRole_value = map[string]int32{
	"LEADER":   0,
	"FOLLOWER": 1,
}

func (x Partition_PartitionBrokerRole) String() string {
	return proto.EnumName(Partition_PartitionBrokerRole_name, int32(x))
}

func (Partition_PartitionBrokerRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{26, 0}
}

type ActivateJobsRequest struct {
	// the job type, as defined in the BPMN process (e.g. <zeebe:taskDefinition
	// type="payment-service" />)
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// the name of the worker activating the jobs, mostly used for logging purposes
	Worker string `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
	// a job returned after this call will not be activated by another call until the
	// timeout has been reached
	Timeout int64 `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// the maximum jobs to activate by this request
	MaxJobsToActivate int32 `protobuf:"varint,4,opt,name=maxJobsToActivate,proto3" json:"maxJobsToActivate,omitempty"`
	// a list of variables to fetch as the job variables; if empty, all visible variables at
	// the time of activation for the scope of the job will be returned
	FetchVariable []string `protobuf:"bytes,5,rep,name=fetchVariable,proto3" json:"fetchVariable,omitempty"`
	// The request will be completed when at least one job is activated or after the requestTimeout.
	// if the requestTimeout = 0, a default timeout is used.
	// if the requestTimeout < 0, long polling is disabled and the request is completed immediately, even when no job is activated.
	RequestTimeout       int64    `protobuf:"varint,6,opt,name=requestTimeout,proto3" json:"requestTimeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateJobsRequest) Reset()         { *m = ActivateJobsRequest{} }
func (m *ActivateJobsRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateJobsRequest) ProtoMessage()    {}
func (*ActivateJobsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{0}
}

func (m *ActivateJobsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateJobsRequest.Unmarshal(m, b)
}
func (m *ActivateJobsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateJobsRequest.Marshal(b, m, deterministic)
}
func (m *ActivateJobsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateJobsRequest.Merge(m, src)
}
func (m *ActivateJobsRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateJobsRequest.Size(m)
}
func (m *ActivateJobsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateJobsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateJobsRequest proto.InternalMessageInfo

func (m *ActivateJobsRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ActivateJobsRequest) GetWorker() string {
	if m != nil {
		return m.Worker
	}
	return ""
}

func (m *ActivateJobsRequest) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ActivateJobsRequest) GetMaxJobsToActivate() int32 {
	if m != nil {
		return m.MaxJobsToActivate
	}
	return 0
}

func (m *ActivateJobsRequest) GetFetchVariable() []string {
	if m != nil {
		return m.FetchVariable
	}
	return nil
}

func (m *ActivateJobsRequest) GetRequestTimeout() int64 {
	if m != nil {
		return m.RequestTimeout
	}
	return 0
}

type ActivateJobsResponse struct {
	// list of activated jobs
	Jobs                 []*ActivatedJob `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ActivateJobsResponse) Reset()         { *m = ActivateJobsResponse{} }
func (m *ActivateJobsResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateJobsResponse) ProtoMessage()    {}
func (*ActivateJobsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{1}
}

func (m *ActivateJobsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateJobsResponse.Unmarshal(m, b)
}
func (m *ActivateJobsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateJobsResponse.Marshal(b, m, deterministic)
}
func (m *ActivateJobsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateJobsResponse.Merge(m, src)
}
func (m *ActivateJobsResponse) XXX_Size() int {
	return xxx_messageInfo_ActivateJobsResponse.Size(m)
}
func (m *ActivateJobsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateJobsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateJobsResponse proto.InternalMessageInfo

func (m *ActivateJobsResponse) GetJobs() []*ActivatedJob {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type ActivatedJob struct {
	// the key, a unique identifier for the job
	Key int64 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	// the type of the job (should match what was requested)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// the job's workflow instance key
	WorkflowInstanceKey int64 `protobuf:"varint,3,opt,name=workflowInstanceKey,proto3" json:"workflowInstanceKey,omitempty"`
	// the bpmn process ID of the job workflow definition
	BpmnProcessId string `protobuf:"bytes,4,opt,name=bpmnProcessId,proto3" json:"bpmnProcessId,omitempty"`
	// the version of the job workflow definition
	WorkflowDefinitionVersion int32 `protobuf:"varint,5,opt,name=workflowDefinitionVersion,proto3" json:"workflowDefinitionVersion,omitempty"`
	// the key of the job workflow definition
	WorkflowKey int64 `protobuf:"varint,6,opt,name=workflowKey,proto3" json:"workflowKey,omitempty"`
	// the associated task element ID
	ElementId string `protobuf:"bytes,7,opt,name=elementId,proto3" json:"elementId,omitempty"`
	// the unique key identifying the associated task, unique within the scope of the
	// workflow instance
	ElementInstanceKey int64 `protobuf:"varint,8,opt,name=elementInstanceKey,proto3" json:"elementInstanceKey,omitempty"`
	// a set of custom headers defined during modelling; returned as a serialized
	// JSON document
	CustomHeaders string `protobuf:"bytes,9,opt,name=customHeaders,proto3" json:"customHeaders,omitempty"`
	// the name of the worker which activated this job
	Worker string `protobuf:"bytes,10,opt,name=worker,proto3" json:"worker,omitempty"`
	// the amount of retries left to this job (should always be positive)
	Retries int32 `protobuf:"varint,11,opt,name=retries,proto3" json:"retries,omitempty"`
	// when the job can be activated again, sent as a UNIX epoch timestamp
	Deadline int64 `protobuf:"varint,12,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// JSON document, computed at activation time, consisting of all visible variables to
	// the task scope
	Variables            string   `protobuf:"bytes,13,opt,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivatedJob) Reset()         { *m = ActivatedJob{} }
func (m *ActivatedJob) String() string { return proto.CompactTextString(m) }
func (*ActivatedJob) ProtoMessage()    {}
func (*ActivatedJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{2}
}

func (m *ActivatedJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivatedJob.Unmarshal(m, b)
}
func (m *ActivatedJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivatedJob.Marshal(b, m, deterministic)
}
func (m *ActivatedJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivatedJob.Merge(m, src)
}
func (m *ActivatedJob) XXX_Size() int {
	return xxx_messageInfo_ActivatedJob.Size(m)
}
func (m *ActivatedJob) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivatedJob.DiscardUnknown(m)
}

var xxx_messageInfo_ActivatedJob proto.InternalMessageInfo

func (m *ActivatedJob) GetKey() int64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ActivatedJob) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ActivatedJob) GetWorkflowInstanceKey() int64 {
	if m != nil {
		return m.WorkflowInstanceKey
	}
	return 0
}

func (m *ActivatedJob) GetBpmnProcessId() string {
	if m != nil {
		return m.BpmnProcessId
	}
	return ""
}

func (m *ActivatedJob) GetWorkflowDefinitionVersion() int32 {
	if m != nil {
		return m.WorkflowDefinitionVersion
	}
	return 0
}

func (m *ActivatedJob) GetWorkflowKey() int64 {
	if m != nil {
		return m.WorkflowKey
	}
	return 0
}

func (m *ActivatedJob) GetElementId() string {
	if m != nil {
		return m.ElementId
	}
	return ""
}

func (m *ActivatedJob) GetElementInstanceKey() int64 {
	if m != nil {
		return m.ElementInstanceKey
	}
	return 0
}

func (m *ActivatedJob) GetCustomHeaders() string {
	if m != nil {
		return m.CustomHeaders
	}
	return ""
}

func (m *ActivatedJob) GetWorker() string {
	if m != nil {
		return m.Worker
	}
	return ""
}

func (m *ActivatedJob) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *ActivatedJob) GetDeadline() int64 {
	if m != nil {
		return m.Deadline
	}
	return 0
}

func (m *ActivatedJob) GetVariables() string {
	if m != nil {
		return m.Variables
	}
	return ""
}

type CancelWorkflowInstanceRequest struct {
	// the workflow instance key (as, for example, obtained from
	// CreateWorkflowInstanceResponse)
	WorkflowInstanceKey  int64    `protobuf:"varint,1,opt,name=workflowInstanceKey,proto3" json:"workflowInstanceKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelWorkflowInstanceRequest) Reset()         { *m = CancelWorkflowInstanceRequest{} }
func (m *CancelWorkflowInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*CancelWorkflowInstanceRequest) ProtoMessage()    {}
func (*CancelWorkflowInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{3}
}

func (m *CancelWorkflowInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelWorkflowInstanceRequest.Unmarshal(m, b)
}
func (m *CancelWorkflowInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelWorkflowInstanceRequest.Marshal(b, m, deterministic)
}
func (m *CancelWorkflowInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelWorkflowInstanceRequest.Merge(m, src)
}
func (m *CancelWorkflowInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_CancelWorkflowInstanceRequest.Size(m)
}
func (m *CancelWorkflowInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelWorkflowInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelWorkflowInstanceRequest proto.InternalMessageInfo

func (m *CancelWorkflowInstanceRequest) GetWorkflowInstanceKey() int64 {
	if m != nil {
		return m.WorkflowInstanceKey
	}
	return 0
}

type CancelWorkflowInstanceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelWorkflowInstanceResponse) Reset()         { *m = CancelWorkflowInstanceResponse{} }
func (m *CancelWorkflowInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*CancelWorkflowInstanceResponse) ProtoMessage()    {}
func (*CancelWorkflowInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{4}
}

func (m *CancelWorkflowInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelWorkflowInstanceResponse.Unmarshal(m, b)
}
func (m *CancelWorkflowInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelWorkflowInstanceResponse.Marshal(b, m, deterministic)
}
func (m *CancelWorkflowInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelWorkflowInstanceResponse.Merge(m, src)
}
func (m *CancelWorkflowInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_CancelWorkflowInstanceResponse.Size(m)
}
func (m *CancelWorkflowInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelWorkflowInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelWorkflowInstanceResponse proto.InternalMessageInfo

type CompleteJobRequest struct {
	// the unique job identifier, as obtained from ActivateJobsResponse
	JobKey int64 `protobuf:"varint,1,opt,name=jobKey,proto3" json:"jobKey,omitempty"`
	// a JSON document representing the variables in the current task scope
	Variables            string   `protobuf:"bytes,2,opt,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteJobRequest) Reset()         { *m = CompleteJobRequest{} }
func (m *CompleteJobRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteJobRequest) ProtoMessage()    {}
func (*CompleteJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{5}
}

func (m *CompleteJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteJobRequest.Unmarshal(m, b)
}
func (m *CompleteJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteJobRequest.Marshal(b, m, deterministic)
}
func (m *CompleteJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteJobRequest.Merge(m, src)
}
func (m *CompleteJobRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteJobRequest.Size(m)
}
func (m *CompleteJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteJobRequest proto.InternalMessageInfo

func (m *CompleteJobRequest) GetJobKey() int64 {
	if m != nil {
		return m.JobKey
	}
	return 0
}

func (m *CompleteJobRequest) GetVariables() string {
	if m != nil {
		return m.Variables
	}
	return ""
}

type CompleteJobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteJobResponse) Reset()         { *m = CompleteJobResponse{} }
func (m *CompleteJobResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteJobResponse) ProtoMessage()    {}
func (*CompleteJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{6}
}

func (m *CompleteJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteJobResponse.Unmarshal(m, b)
}
func (m *CompleteJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteJobResponse.Marshal(b, m, deterministic)
}
func (m *CompleteJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteJobResponse.Merge(m, src)
}
func (m *CompleteJobResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteJobResponse.Size(m)
}
func (m *CompleteJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteJobResponse proto.InternalMessageInfo

type CreateWorkflowInstanceRequest struct {
	// the unique key identifying the workflow definition (e.g. returned from a workflow
	// in the DeployWorkflowResponse message)
	WorkflowKey int64 `protobuf:"varint,1,opt,name=workflowKey,proto3" json:"workflowKey,omitempty"`
	// the BPMN process ID of the workflow definition
	BpmnProcessId string `protobuf:"bytes,2,opt,name=bpmnProcessId,proto3" json:"bpmnProcessId,omitempty"`
	// the version of the process; set to -1 to use the latest version
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// JSON document that will instantiate the variables for the root variable scope of the
	// workflow instance; it must be a JSON object, as variables will be mapped in a
	// key-value fashion. e.g. { "a": 1, "b": 2 } will create two variables, named "a" and
	// "b" respectively, with their associated values. [{ "a": 1, "b": 2 }] would not be a
	// valid argument, as the root of the JSON document is an array and not an object.
	Variables            string   `protobuf:"bytes,4,opt,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWorkflowInstanceRequest) Reset()         { *m = CreateWorkflowInstanceRequest{} }
func (m *CreateWorkflowInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowInstanceRequest) ProtoMessage()    {}
func (*CreateWorkflowInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{7}
}

func (m *CreateWorkflowInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowInstanceRequest.Unmarshal(m, b)
}
func (m *CreateWorkflowInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowInstanceRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowInstanceRequest.Merge(m, src)
}
func (m *CreateWorkflowInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowInstanceRequest.Size(m)
}
func (m *CreateWorkflowInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowInstanceRequest proto.InternalMessageInfo

func (m *CreateWorkflowInstanceRequest) GetWorkflowKey() int64 {
	if m != nil {
		return m.WorkflowKey
	}
	return 0
}

func (m *CreateWorkflowInstanceRequest) GetBpmnProcessId() string {
	if m != nil {
		return m.BpmnProcessId
	}
	return ""
}

func (m *CreateWorkflowInstanceRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *CreateWorkflowInstanceRequest) GetVariables() string {
	if m != nil {
		return m.Variables
	}
	return ""
}

type CreateWorkflowInstanceResponse struct {
	// the key of the workflow definition which was used to create the workflow instance
	WorkflowKey int64 `protobuf:"varint,1,opt,name=workflowKey,proto3" json:"workflowKey,omitempty"`
	// the BPMN process ID of the workflow definition which was used to create the workflow
	// instance
	BpmnProcessId string `protobuf:"bytes,2,opt,name=bpmnProcessId,proto3" json:"bpmnProcessId,omitempty"`
	// the version of the workflow definition which was used to create the workflow instance
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// the unique identifier of the created workflow instance; to be used wherever a request
	// needs a workflow instance key (e.g. CancelWorkflowInstanceRequest)
	WorkflowInstanceKey  int64    `protobuf:"varint,4,opt,name=workflowInstanceKey,proto3" json:"workflowInstanceKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWorkflowInstanceResponse) Reset()         { *m = CreateWorkflowInstanceResponse{} }
func (m *CreateWorkflowInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowInstanceResponse) ProtoMessage()    {}
func (*CreateWorkflowInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{8}
}

func (m *CreateWorkflowInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowInstanceResponse.Unmarshal(m, b)
}
func (m *CreateWorkflowInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowInstanceResponse.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowInstanceResponse.Merge(m, src)
}
func (m *CreateWorkflowInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowInstanceResponse.Size(m)
}
func (m *CreateWorkflowInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowInstanceResponse proto.InternalMessageInfo

func (m *CreateWorkflowInstanceResponse) GetWorkflowKey() int64 {
	if m != nil {
		return m.WorkflowKey
	}
	return 0
}

func (m *CreateWorkflowInstanceResponse) GetBpmnProcessId() string {
	if m != nil {
		return m.BpmnProcessId
	}
	return ""
}

func (m *CreateWorkflowInstanceResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *CreateWorkflowInstanceResponse) GetWorkflowInstanceKey() int64 {
	if m != nil {
		return m.WorkflowInstanceKey
	}
	return 0
}

type CreateWorkflowInstanceWithResultRequest struct {
	Request *CreateWorkflowInstanceRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	// timeout in milliseconds. the request will be closed if the workflow is not completed
	// before the requestTimeout.
	// if requestTimeout = 0, uses the generic requestTimeout configured in the gateway.
	RequestTimeout int64 `protobuf:"varint,2,opt,name=requestTimeout,proto3" json:"requestTimeout,omitempty"`
	// list of names of variables to be included in `CreateWorkflowInstanceWithResultResponse.variables`
	// if empty, all visible variables in the root scope will be returned.
	FetchVariables       []string `protobuf:"bytes,3,rep,name=fetchVariables,proto3" json:"fetchVariables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWorkflowInstanceWithResultRequest) Reset() {
	*m = CreateWorkflowInstanceWithResultRequest{}
}
func (m *CreateWorkflowInstanceWithResultRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowInstanceWithResultRequest) ProtoMessage()    {}
func (*CreateWorkflowInstanceWithResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{9}
}

func (m *CreateWorkflowInstanceWithResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowInstanceWithResultRequest.Unmarshal(m, b)
}
func (m *CreateWorkflowInstanceWithResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowInstanceWithResultRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowInstanceWithResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowInstanceWithResultRequest.Merge(m, src)
}
func (m *CreateWorkflowInstanceWithResultRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowInstanceWithResultRequest.Size(m)
}
func (m *CreateWorkflowInstanceWithResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowInstanceWithResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowInstanceWithResultRequest proto.InternalMessageInfo

func (m *CreateWorkflowInstanceWithResultRequest) GetRequest() *CreateWorkflowInstanceRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *CreateWorkflowInstanceWithResultRequest) GetRequestTimeout() int64 {
	if m != nil {
		return m.RequestTimeout
	}
	return 0
}

func (m *CreateWorkflowInstanceWithResultRequest) GetFetchVariables() []string {
	if m != nil {
		return m.FetchVariables
	}
	return nil
}

type CreateWorkflowInstanceWithResultResponse struct {
	// the key of the workflow definition which was used to create the workflow instance
	WorkflowKey int64 `protobuf:"varint,1,opt,name=workflowKey,proto3" json:"workflowKey,omitempty"`
	// the BPMN process ID of the workflow definition which was used to create the workflow
	// instance
	BpmnProcessId string `protobuf:"bytes,2,opt,name=bpmnProcessId,proto3" json:"bpmnProcessId,omitempty"`
	// the version of the workflow definition which was used to create the workflow instance
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// the unique identifier of the created workflow instance; to be used wherever a request
	// needs a workflow instance key (e.g. CancelWorkflowInstanceRequest)
	WorkflowInstanceKey int64 `protobuf:"varint,4,opt,name=workflowInstanceKey,proto3" json:"workflowInstanceKey,omitempty"`
	// JSON document
	// consists of visible variables in the root scope
	Variables            string   `protobuf:"bytes,5,opt,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWorkflowInstanceWithResultResponse) Reset() {
	*m = CreateWorkflowInstanceWithResultResponse{}
}
func (m *CreateWorkflowInstanceWithResultResponse) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowInstanceWithResultResponse) ProtoMessage()    {}
func (*CreateWorkflowInstanceWithResultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{10}
}

func (m *CreateWorkflowInstanceWithResultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowInstanceWithResultResponse.Unmarshal(m, b)
}
func (m *CreateWorkflowInstanceWithResultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowInstanceWithResultResponse.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowInstanceWithResultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowInstanceWithResultResponse.Merge(m, src)
}
func (m *CreateWorkflowInstanceWithResultResponse) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowInstanceWithResultResponse.Size(m)
}
func (m *CreateWorkflowInstanceWithResultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowInstanceWithResultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowInstanceWithResultResponse proto.InternalMessageInfo

func (m *CreateWorkflowInstanceWithResultResponse) GetWorkflowKey() int64 {
	if m != nil {
		return m.WorkflowKey
	}
	return 0
}

func (m *CreateWorkflowInstanceWithResultResponse) GetBpmnProcessId() string {
	if m != nil {
		return m.BpmnProcessId
	}
	return ""
}

func (m *CreateWorkflowInstanceWithResultResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *CreateWorkflowInstanceWithResultResponse) GetWorkflowInstanceKey() int64 {
	if m != nil {
		return m.WorkflowInstanceKey
	}
	return 0
}

func (m *CreateWorkflowInstanceWithResultResponse) GetVariables() string {
	if m != nil {
		return m.Variables
	}
	return ""
}

type DeployWorkflowRequest struct {
	// List of workflow resources to deploy
	Workflows            []*WorkflowRequestObject `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeployWorkflowRequest) Reset()         { *m = DeployWorkflowRequest{} }
func (m *DeployWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*DeployWorkflowRequest) ProtoMessage()    {}
func (*DeployWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{11}
}

func (m *DeployWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployWorkflowRequest.Unmarshal(m, b)
}
func (m *DeployWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *DeployWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployWorkflowRequest.Merge(m, src)
}
func (m *DeployWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_DeployWorkflowRequest.Size(m)
}
func (m *DeployWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployWorkflowRequest proto.InternalMessageInfo

func (m *DeployWorkflowRequest) GetWorkflows() []*WorkflowRequestObject {
	if m != nil {
		return m.Workflows
	}
	return nil
}

type WorkflowRequestObject struct {
	// the resource basename, e.g. myProcess.bpmn
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the resource type; if set to BPMN or YAML then the file extension
	// is ignored
	Type WorkflowRequestObject_ResourceType `protobuf:"varint,2,opt,name=type,proto3,enum=gateway_protocol.WorkflowRequestObject_ResourceType" json:"type,omitempty"`
	// the process definition as a UTF8-encoded string
	Definition           []byte   `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowRequestObject) Reset()         { *m = WorkflowRequestObject{} }
func (m *WorkflowRequestObject) String() string { return proto.CompactTextString(m) }
func (*WorkflowRequestObject) ProtoMessage()    {}
func (*WorkflowRequestObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{12}
}

func (m *WorkflowRequestObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowRequestObject.Unmarshal(m, b)
}
func (m *WorkflowRequestObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowRequestObject.Marshal(b, m, deterministic)
}
func (m *WorkflowRequestObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowRequestObject.Merge(m, src)
}
func (m *WorkflowRequestObject) XXX_Size() int {
	return xxx_messageInfo_WorkflowRequestObject.Size(m)
}
func (m *WorkflowRequestObject) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowRequestObject.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowRequestObject proto.InternalMessageInfo

func (m *WorkflowRequestObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowRequestObject) GetType() WorkflowRequestObject_ResourceType {
	if m != nil {
		return m.Type
	}
	return WorkflowRequestObject_FILE
}

func (m *WorkflowRequestObject) GetDefinition() []byte {
	if m != nil {
		return m.Definition
	}
	return nil
}

type DeployWorkflowResponse struct {
	// the unique key identifying the deployment
	Key int64 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	// a list of deployed workflows
	Workflows            []*WorkflowMetadata `protobuf:"bytes,2,rep,name=workflows,proto3" json:"workflows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DeployWorkflowResponse) Reset()         { *m = DeployWorkflowResponse{} }
func (m *DeployWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*DeployWorkflowResponse) ProtoMessage()    {}
func (*DeployWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{13}
}

func (m *DeployWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployWorkflowResponse.Unmarshal(m, b)
}
func (m *DeployWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *DeployWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployWorkflowResponse.Merge(m, src)
}
func (m *DeployWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_DeployWorkflowResponse.Size(m)
}
func (m *DeployWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeployWorkflowResponse proto.InternalMessageInfo

func (m *DeployWorkflowResponse) GetKey() int64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *DeployWorkflowResponse) GetWorkflows() []*WorkflowMetadata {
	if m != nil {
		return m.Workflows
	}
	return nil
}

type WorkflowMetadata struct {
	// the bpmn process ID, as parsed during deployment; together with the version forms a
	// unique identifier for a specific workflow definition
	BpmnProcessId string `protobuf:"bytes,1,opt,name=bpmnProcessId,proto3" json:"bpmnProcessId,omitempty"`
	// the assigned process version
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// the assigned key, which acts as a unique identifier for this workflow
	WorkflowKey int64 `protobuf:"varint,3,opt,name=workflowKey,proto3" json:"workflowKey,omitempty"`
	// the resource name (see: WorkflowRequestObject.name) from which this workflow was
	// parsed
	ResourceName         string   `protobuf:"bytes,4,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowMetadata) Reset()         { *m = WorkflowMetadata{} }
func (m *WorkflowMetadata) String() string { return proto.CompactTextString(m) }
func (*WorkflowMetadata) ProtoMessage()    {}
func (*WorkflowMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{14}
}

func (m *WorkflowMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowMetadata.Unmarshal(m, b)
}
func (m *WorkflowMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowMetadata.Marshal(b, m, deterministic)
}
func (m *WorkflowMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowMetadata.Merge(m, src)
}
func (m *WorkflowMetadata) XXX_Size() int {
	return xxx_messageInfo_WorkflowMetadata.Size(m)
}
func (m *WorkflowMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowMetadata proto.InternalMessageInfo

func (m *WorkflowMetadata) GetBpmnProcessId() string {
	if m != nil {
		return m.BpmnProcessId
	}
	return ""
}

func (m *WorkflowMetadata) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *WorkflowMetadata) GetWorkflowKey() int64 {
	if m != nil {
		return m.WorkflowKey
	}
	return 0
}

func (m *WorkflowMetadata) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

type FailJobRequest struct {
	// the unique job identifier, as obtained when activating the job
	JobKey int64 `protobuf:"varint,1,opt,name=jobKey,proto3" json:"jobKey,omitempty"`
	// the amount of retries the job should have left
	Retries int32 `protobuf:"varint,2,opt,name=retries,proto3" json:"retries,omitempty"`
	// an optional message describing why the job failed
	// this is particularly useful if a job runs out of retries and an incident is raised,
	// as it this message can help explain why an incident was raised
	ErrorMessage         string   `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailJobRequest) Reset()         { *m = FailJobRequest{} }
func (m *FailJobRequest) String() string { return proto.CompactTextString(m) }
func (*FailJobRequest) ProtoMessage()    {}
func (*FailJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{15}
}

func (m *FailJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailJobRequest.Unmarshal(m, b)
}
func (m *FailJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailJobRequest.Marshal(b, m, deterministic)
}
func (m *FailJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailJobRequest.Merge(m, src)
}
func (m *FailJobRequest) XXX_Size() int {
	return xxx_messageInfo_FailJobRequest.Size(m)
}
func (m *FailJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FailJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FailJobRequest proto.InternalMessageInfo

func (m *FailJobRequest) GetJobKey() int64 {
	if m != nil {
		return m.JobKey
	}
	return 0
}

func (m *FailJobRequest) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *FailJobRequest) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type FailJobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailJobResponse) Reset()         { *m = FailJobResponse{} }
func (m *FailJobResponse) String() string { return proto.CompactTextString(m) }
func (*FailJobResponse) ProtoMessage()    {}
func (*FailJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{16}
}

func (m *FailJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailJobResponse.Unmarshal(m, b)
}
func (m *FailJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailJobResponse.Marshal(b, m, deterministic)
}
func (m *FailJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailJobResponse.Merge(m, src)
}
func (m *FailJobResponse) XXX_Size() int {
	return xxx_messageInfo_FailJobResponse.Size(m)
}
func (m *FailJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FailJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FailJobResponse proto.InternalMessageInfo

type ThrowErrorRequest struct {
	// the unique job identifier, as obtained when activating the job
	JobKey int64 `protobuf:"varint,1,opt,name=jobKey,proto3" json:"jobKey,omitempty"`
	// the error code that will be matched with an error catch event
	ErrorCode string `protobuf:"bytes,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// an optional error message that provides additional context
	ErrorMessage         string   `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThrowErrorRequest) Reset()         { *m = ThrowErrorRequest{} }
func (m *ThrowErrorRequest) String() string { return proto.CompactTextString(m) }
func (*ThrowErrorRequest) ProtoMessage()    {}
func (*ThrowErrorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{17}
}

func (m *ThrowErrorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThrowErrorRequest.Unmarshal(m, b)
}
func (m *ThrowErrorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThrowErrorRequest.Marshal(b, m, deterministic)
}
func (m *ThrowErrorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThrowErrorRequest.Merge(m, src)
}
func (m *ThrowErrorRequest) XXX_Size() int {
	return xxx_messageInfo_ThrowErrorRequest.Size(m)
}
func (m *ThrowErrorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ThrowErrorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ThrowErrorRequest proto.InternalMessageInfo

func (m *ThrowErrorRequest) GetJobKey() int64 {
	if m != nil {
		return m.JobKey
	}
	return 0
}

func (m *ThrowErrorRequest) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *ThrowErrorRequest) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type ThrowErrorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThrowErrorResponse) Reset()         { *m = ThrowErrorResponse{} }
func (m *ThrowErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ThrowErrorResponse) ProtoMessage()    {}
func (*ThrowErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{18}
}

func (m *ThrowErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThrowErrorResponse.Unmarshal(m, b)
}
func (m *ThrowErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThrowErrorResponse.Marshal(b, m, deterministic)
}
func (m *ThrowErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThrowErrorResponse.Merge(m, src)
}
func (m *ThrowErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ThrowErrorResponse.Size(m)
}
func (m *ThrowErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ThrowErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ThrowErrorResponse proto.InternalMessageInfo

type PublishMessageRequest struct {
	// the name of the message
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the correlation key of the message
	CorrelationKey string `protobuf:"bytes,2,opt,name=correlationKey,proto3" json:"correlationKey,omitempty"`
	// how long the message should be buffered on the broker, in milliseconds
	TimeToLive int64 `protobuf:"varint,3,opt,name=timeToLive,proto3" json:"timeToLive,omitempty"`
	// the unique ID of the message; can be omitted. only useful to ensure only one message
	// with the given ID will ever be published (during its lifetime)
	MessageId string `protobuf:"bytes,4,opt,name=messageId,proto3" json:"messageId,omitempty"`
	// the message variables as a JSON document; to be valid, the root of the document must be an
	// object, e.g. { "a": "foo" }. [ "foo" ] would not be valid.
	Variables            string   `protobuf:"bytes,5,opt,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishMessageRequest) Reset()         { *m = PublishMessageRequest{} }
func (m *PublishMessageRequest) String() string { return proto.CompactTextString(m) }
func (*PublishMessageRequest) ProtoMessage()    {}
func (*PublishMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{19}
}

func (m *PublishMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishMessageRequest.Unmarshal(m, b)
}
func (m *PublishMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishMessageRequest.Marshal(b, m, deterministic)
}
func (m *PublishMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishMessageRequest.Merge(m, src)
}
func (m *PublishMessageRequest) XXX_Size() int {
	return xxx_messageInfo_PublishMessageRequest.Size(m)
}
func (m *PublishMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishMessageRequest proto.InternalMessageInfo

func (m *PublishMessageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PublishMessageRequest) GetCorrelationKey() string {
	if m != nil {
		return m.CorrelationKey
	}
	return ""
}

func (m *PublishMessageRequest) GetTimeToLive() int64 {
	if m != nil {
		return m.TimeToLive
	}
	return 0
}

func (m *PublishMessageRequest) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *PublishMessageRequest) GetVariables() string {
	if m != nil {
		return m.Variables
	}
	return ""
}

type PublishMessageResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishMessageResponse) Reset()         { *m = PublishMessageResponse{} }
func (m *PublishMessageResponse) String() string { return proto.CompactTextString(m) }
func (*PublishMessageResponse) ProtoMessage()    {}
func (*PublishMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{20}
}

func (m *PublishMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishMessageResponse.Unmarshal(m, b)
}
func (m *PublishMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishMessageResponse.Marshal(b, m, deterministic)
}
func (m *PublishMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishMessageResponse.Merge(m, src)
}
func (m *PublishMessageResponse) XXX_Size() int {
	return xxx_messageInfo_PublishMessageResponse.Size(m)
}
func (m *PublishMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishMessageResponse proto.InternalMessageInfo

type ResolveIncidentRequest struct {
	// the unique ID of the incident to resolve
	IncidentKey          int64    `protobuf:"varint,1,opt,name=incidentKey,proto3" json:"incidentKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveIncidentRequest) Reset()         { *m = ResolveIncidentRequest{} }
func (m *ResolveIncidentRequest) String() string { return proto.CompactTextString(m) }
func (*ResolveIncidentRequest) ProtoMessage()    {}
func (*ResolveIncidentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{21}
}

func (m *ResolveIncidentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveIncidentRequest.Unmarshal(m, b)
}
func (m *ResolveIncidentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveIncidentRequest.Marshal(b, m, deterministic)
}
func (m *ResolveIncidentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveIncidentRequest.Merge(m, src)
}
func (m *ResolveIncidentRequest) XXX_Size() int {
	return xxx_messageInfo_ResolveIncidentRequest.Size(m)
}
func (m *ResolveIncidentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveIncidentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveIncidentRequest proto.InternalMessageInfo

func (m *ResolveIncidentRequest) GetIncidentKey() int64 {
	if m != nil {
		return m.IncidentKey
	}
	return 0
}

type ResolveIncidentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveIncidentResponse) Reset()         { *m = ResolveIncidentResponse{} }
func (m *ResolveIncidentResponse) String() string { return proto.CompactTextString(m) }
func (*ResolveIncidentResponse) ProtoMessage()    {}
func (*ResolveIncidentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{22}
}

func (m *ResolveIncidentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveIncidentResponse.Unmarshal(m, b)
}
func (m *ResolveIncidentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveIncidentResponse.Marshal(b, m, deterministic)
}
func (m *ResolveIncidentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveIncidentResponse.Merge(m, src)
}
func (m *ResolveIncidentResponse) XXX_Size() int {
	return xxx_messageInfo_ResolveIncidentResponse.Size(m)
}
func (m *ResolveIncidentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveIncidentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveIncidentResponse proto.InternalMessageInfo

type TopologyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopologyRequest) Reset()         { *m = TopologyRequest{} }
func (m *TopologyRequest) String() string { return proto.CompactTextString(m) }
func (*TopologyRequest) ProtoMessage()    {}
func (*TopologyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{23}
}

func (m *TopologyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopologyRequest.Unmarshal(m, b)
}
func (m *TopologyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopologyRequest.Marshal(b, m, deterministic)
}
func (m *TopologyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopologyRequest.Merge(m, src)
}
func (m *TopologyRequest) XXX_Size() int {
	return xxx_messageInfo_TopologyRequest.Size(m)
}
func (m *TopologyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TopologyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TopologyRequest proto.InternalMessageInfo

type TopologyResponse struct {
	// list of brokers part of this cluster
	Brokers []*BrokerInfo `protobuf:"bytes,1,rep,name=brokers,proto3" json:"brokers,omitempty"`
	// how many nodes are in the cluster
	ClusterSize int32 `protobuf:"varint,2,opt,name=clusterSize,proto3" json:"clusterSize,omitempty"`
	// how many partitions are spread across the cluster
	PartitionsCount int32 `protobuf:"varint,3,opt,name=partitionsCount,proto3" json:"partitionsCount,omitempty"`
	// configured replication factor for this cluster
	ReplicationFactor int32 `protobuf:"varint,4,opt,name=replicationFactor,proto3" json:"replicationFactor,omitempty"`
	// gateway version
	GatewayVersion       string   `protobuf:"bytes,5,opt,name=gatewayVersion,proto3" json:"gatewayVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopologyResponse) Reset()         { *m = TopologyResponse{} }
func (m *TopologyResponse) String() string { return proto.CompactTextString(m) }
func (*TopologyResponse) ProtoMessage()    {}
func (*TopologyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{24}
}

func (m *TopologyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopologyResponse.Unmarshal(m, b)
}
func (m *TopologyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopologyResponse.Marshal(b, m, deterministic)
}
func (m *TopologyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopologyResponse.Merge(m, src)
}
func (m *TopologyResponse) XXX_Size() int {
	return xxx_messageInfo_TopologyResponse.Size(m)
}
func (m *TopologyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TopologyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TopologyResponse proto.InternalMessageInfo

func (m *TopologyResponse) GetBrokers() []*BrokerInfo {
	if m != nil {
		return m.Brokers
	}
	return nil
}

func (m *TopologyResponse) GetClusterSize() int32 {
	if m != nil {
		return m.ClusterSize
	}
	return 0
}

func (m *TopologyResponse) GetPartitionsCount() int32 {
	if m != nil {
		return m.PartitionsCount
	}
	return 0
}

func (m *TopologyResponse) GetReplicationFactor() int32 {
	if m != nil {
		return m.ReplicationFactor
	}
	return 0
}

func (m *TopologyResponse) GetGatewayVersion() string {
	if m != nil {
		return m.GatewayVersion
	}
	return ""
}

type BrokerInfo struct {
	// unique (within a cluster) node ID for the broker
	NodeId int32 `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// hostname of the broker
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// port for the broker
	Port int32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	// list of partitions managed or replicated on this broker
	Partitions []*Partition `protobuf:"bytes,4,rep,name=partitions,proto3" json:"partitions,omitempty"`
	// broker version
	Version              string   `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerInfo) Reset()         { *m = BrokerInfo{} }
func (m *BrokerInfo) String() string { return proto.CompactTextString(m) }
func (*BrokerInfo) ProtoMessage()    {}
func (*BrokerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{25}
}

func (m *BrokerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerInfo.Unmarshal(m, b)
}
func (m *BrokerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerInfo.Marshal(b, m, deterministic)
}
func (m *BrokerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerInfo.Merge(m, src)
}
func (m *BrokerInfo) XXX_Size() int {
	return xxx_messageInfo_BrokerInfo.Size(m)
}
func (m *BrokerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerInfo proto.InternalMessageInfo

func (m *BrokerInfo) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *BrokerInfo) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *BrokerInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *BrokerInfo) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

func (m *BrokerInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Partition struct {
	// the unique ID of this partition
	PartitionId int32 `protobuf:"varint,1,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
	// the role of the broker for this partition
	Role                 Partition_PartitionBrokerRole `protobuf:"varint,2,opt,name=role,proto3,enum=gateway_protocol.Partition_PartitionBrokerRole" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Partition) Reset()         { *m = Partition{} }
func (m *Partition) String() string { return proto.CompactTextString(m) }
func (*Partition) ProtoMessage()    {}
func (*Partition) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{26}
}

func (m *Partition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partition.Unmarshal(m, b)
}
func (m *Partition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partition.Marshal(b, m, deterministic)
}
func (m *Partition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partition.Merge(m, src)
}
func (m *Partition) XXX_Size() int {
	return xxx_messageInfo_Partition.Size(m)
}
func (m *Partition) XXX_DiscardUnknown() {
	xxx_messageInfo_Partition.DiscardUnknown(m)
}

var xxx_messageInfo_Partition proto.InternalMessageInfo

func (m *Partition) GetPartitionId() int32 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *Partition) GetRole() Partition_PartitionBrokerRole {
	if m != nil {
		return m.Role
	}
	return Partition_LEADER
}

type UpdateJobRetriesRequest struct {
	// the unique job identifier, as obtained through ActivateJobs
	JobKey int64 `protobuf:"varint,1,opt,name=jobKey,proto3" json:"jobKey,omitempty"`
	// the new amount of retries for the job; must be positive
	Retries              int32    `protobuf:"varint,2,opt,name=retries,proto3" json:"retries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateJobRetriesRequest) Reset()         { *m = UpdateJobRetriesRequest{} }
func (m *UpdateJobRetriesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateJobRetriesRequest) ProtoMessage()    {}
func (*UpdateJobRetriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{27}
}

func (m *UpdateJobRetriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateJobRetriesRequest.Unmarshal(m, b)
}
func (m *UpdateJobRetriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateJobRetriesRequest.Marshal(b, m, deterministic)
}
func (m *UpdateJobRetriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateJobRetriesRequest.Merge(m, src)
}
func (m *UpdateJobRetriesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateJobRetriesRequest.Size(m)
}
func (m *UpdateJobRetriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateJobRetriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateJobRetriesRequest proto.InternalMessageInfo

func (m *UpdateJobRetriesRequest) GetJobKey() int64 {
	if m != nil {
		return m.JobKey
	}
	return 0
}

func (m *UpdateJobRetriesRequest) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

type UpdateJobRetriesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateJobRetriesResponse) Reset()         { *m = UpdateJobRetriesResponse{} }
func (m *UpdateJobRetriesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateJobRetriesResponse) ProtoMessage()    {}
func (*UpdateJobRetriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{28}
}

func (m *UpdateJobRetriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateJobRetriesResponse.Unmarshal(m, b)
}
func (m *UpdateJobRetriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateJobRetriesResponse.Marshal(b, m, deterministic)
}
func (m *UpdateJobRetriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateJobRetriesResponse.Merge(m, src)
}
func (m *UpdateJobRetriesResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateJobRetriesResponse.Size(m)
}
func (m *UpdateJobRetriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateJobRetriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateJobRetriesResponse proto.InternalMessageInfo

type SetVariablesRequest struct {
	// the unique identifier of a particular element; can be the workflow instance key (as
	// obtained during instance creation), or a given element, such as a service task (see
	// elementInstanceKey on the job message)
	ElementInstanceKey int64 `protobuf:"varint,1,opt,name=elementInstanceKey,proto3" json:"elementInstanceKey,omitempty"`
	// a JSON serialized document describing variables as key value pairs; the root of the document
	// must be an object
	Variables string `protobuf:"bytes,2,opt,name=variables,proto3" json:"variables,omitempty"`
	// if true, the variables will be merged strictly into the local scope (as indicated by
	// elementInstanceKey); this means the variables is not propagated to upper scopes.
	// for example, let's say we have two scopes, '1' and '2', with each having effective variables as:
	// 1 => `{ "foo" : 2 }`, and 2 => `{ "bar" : 1 }`. if we send an update request with
	// elementInstanceKey = 2, variables `{ "foo" : 5 }`, and local is true, then scope 1 will
	// be unchanged, and scope 2 will now be `{ "bar" : 1, "foo" 5 }`. if local was false, however,
	// then scope 1 would be `{ "foo": 5 }`, and scope 2 would be `{ "bar" : 1 }`.
	Local                bool     `protobuf:"varint,3,opt,name=local,proto3" json:"local,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetVariablesRequest) Reset()         { *m = SetVariablesRequest{} }
func (m *SetVariablesRequest) String() string { return proto.CompactTextString(m) }
func (*SetVariablesRequest) ProtoMessage()    {}
func (*SetVariablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{29}
}

func (m *SetVariablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVariablesRequest.Unmarshal(m, b)
}
func (m *SetVariablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVariablesRequest.Marshal(b, m, deterministic)
}
func (m *SetVariablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVariablesRequest.Merge(m, src)
}
func (m *SetVariablesRequest) XXX_Size() int {
	return xxx_messageInfo_SetVariablesRequest.Size(m)
}
func (m *SetVariablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVariablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetVariablesRequest proto.InternalMessageInfo

func (m *SetVariablesRequest) GetElementInstanceKey() int64 {
	if m != nil {
		return m.ElementInstanceKey
	}
	return 0
}

func (m *SetVariablesRequest) GetVariables() string {
	if m != nil {
		return m.Variables
	}
	return ""
}

func (m *SetVariablesRequest) GetLocal() bool {
	if m != nil {
		return m.Local
	}
	return false
}

type SetVariablesResponse struct {
	// the unique key of the set variables command
	Key                  int64    `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetVariablesResponse) Reset()         { *m = SetVariablesResponse{} }
func (m *SetVariablesResponse) String() string { return proto.CompactTextString(m) }
func (*SetVariablesResponse) ProtoMessage()    {}
func (*SetVariablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{30}
}

func (m *SetVariablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetVariablesResponse.Unmarshal(m, b)
}
func (m *SetVariablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetVariablesResponse.Marshal(b, m, deterministic)
}
func (m *SetVariablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetVariablesResponse.Merge(m, src)
}
func (m *SetVariablesResponse) XXX_Size() int {
	return xxx_messageInfo_SetVariablesResponse.Size(m)
}
func (m *SetVariablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetVariablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetVariablesResponse proto.InternalMessageInfo

func (m *SetVariablesResponse) GetKey() int64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func init() {
	proto.RegisterEnum("gateway_protocol.WorkflowRequestObject_ResourceType", WorkflowRequestObject_ResourceType_name, WorkflowRequestObject_ResourceType_value)
	proto.RegisterEnum("gateway_protocol.Partition_PartitionBrokerRole", Partition_PartitionBrokerRole_name, Partition_PartitionBrokerRole_value)
	proto.RegisterType((*ActivateJobsRequest)(nil), "gateway_protocol.ActivateJobsRequest")
	proto.RegisterType((*ActivateJobsResponse)(nil), "gateway_protocol.ActivateJobsResponse")
	proto.RegisterType((*ActivatedJob)(nil), "gateway_protocol.ActivatedJob")
	proto.RegisterType((*CancelWorkflowInstanceRequest)(nil), "gateway_protocol.CancelWorkflowInstanceRequest")
	proto.RegisterType((*CancelWorkflowInstanceResponse)(nil), "gateway_protocol.CancelWorkflowInstanceResponse")
	proto.RegisterType((*CompleteJobRequest)(nil), "gateway_protocol.CompleteJobRequest")
	proto.RegisterType((*CompleteJobResponse)(nil), "gateway_protocol.CompleteJobResponse")
	proto.RegisterType((*CreateWorkflowInstanceRequest)(nil), "gateway_protocol.CreateWorkflowInstanceRequest")
	proto.RegisterType((*CreateWorkflowInstanceResponse)(nil), "gateway_protocol.CreateWorkflowInstanceResponse")
	proto.RegisterType((*CreateWorkflowInstanceWithResultRequest)(nil), "gateway_protocol.CreateWorkflowInstanceWithResultRequest")
	proto.RegisterType((*CreateWorkflowInstanceWithResultResponse)(nil), "gateway_protocol.CreateWorkflowInstanceWithResultResponse")
	proto.RegisterType((*DeployWorkflowRequest)(nil), "gateway_protocol.DeployWorkflowRequest")
	proto.RegisterType((*WorkflowRequestObject)(nil), "gateway_protocol.WorkflowRequestObject")
	proto.RegisterType((*DeployWorkflowResponse)(nil), "gateway_protocol.DeployWorkflowResponse")
	proto.RegisterType((*WorkflowMetadata)(nil), "gateway_protocol.WorkflowMetadata")
	proto.RegisterType((*FailJobRequest)(nil), "gateway_protocol.FailJobRequest")
	proto.RegisterType((*FailJobResponse)(nil), "gateway_protocol.FailJobResponse")
	proto.RegisterType((*ThrowErrorRequest)(nil), "gateway_protocol.ThrowErrorRequest")
	proto.RegisterType((*ThrowErrorResponse)(nil), "gateway_protocol.ThrowErrorResponse")
	proto.RegisterType((*PublishMessageRequest)(nil), "gateway_protocol.PublishMessageRequest")
	proto.RegisterType((*PublishMessageResponse)(nil), "gateway_protocol.PublishMessageResponse")
	proto.RegisterType((*ResolveIncidentRequest)(nil), "gateway_protocol.ResolveIncidentRequest")
	proto.RegisterType((*ResolveIncidentResponse)(nil), "gateway_protocol.ResolveIncidentResponse")
	proto.RegisterType((*TopologyRequest)(nil), "gateway_protocol.TopologyRequest")
	proto.RegisterType((*TopologyResponse)(nil), "gateway_protocol.TopologyResponse")
	proto.RegisterType((*BrokerInfo)(nil), "gateway_protocol.BrokerInfo")
	proto.RegisterType((*Partition)(nil), "gateway_protocol.Partition")
	proto.RegisterType((*UpdateJobRetriesRequest)(nil), "gateway_protocol.UpdateJobRetriesRequest")
	proto.RegisterType((*UpdateJobRetriesResponse)(nil), "gateway_protocol.UpdateJobRetriesResponse")
	proto.RegisterType((*SetVariablesRequest)(nil), "gateway_protocol.SetVariablesRequest")
	proto.RegisterType((*SetVariablesResponse)(nil), "gateway_protocol.SetVariablesResponse")
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor_f1a937782ebbded5) }

var fileDescriptor_f1a937782ebbded5 = []byte{
	// 1497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xdd, 0x6e, 0x1b, 0xc5,
	0x17, 0xcf, 0xda, 0xce, 0x87, 0x4f, 0xdc, 0xc4, 0x99, 0x7c, 0x74, 0xeb, 0x7f, 0x1b, 0xb9, 0xfb,
	0xef, 0x87, 0x41, 0x95, 0x5b, 0x05, 0x84, 0x44, 0xe1, 0x82, 0x36, 0x4d, 0xa8, 0xd3, 0xa4, 0x0d,
	0xdb, 0xd0, 0xaa, 0x08, 0x51, 0xad, 0xd7, 0x93, 0x66, 0x9b, 0xf5, 0xce, 0xb2, 0x3b, 0x4e, 0x70,
	0x25, 0xde, 0x03, 0x89, 0x0b, 0x2e, 0x78, 0x00, 0x6e, 0x78, 0x03, 0xb8, 0xe4, 0x9e, 0x1b, 0x1e,
	0x01, 0xf1, 0x0c, 0x68, 0x66, 0x67, 0xd6, 0xfb, 0x31, 0x6b, 0x9b, 0x4a, 0x48, 0xdc, 0xcd, 0x9c,
	0x3d, 0xdf, 0xe7, 0xcc, 0x39, 0x3f, 0x1b, 0x2e, 0xbc, 0xb2, 0x28, 0x3e, 0xb7, 0x86, 0x6d, 0x3f,
	0x20, 0x94, 0xa0, 0xba, 0xb8, 0xbe, 0xe4, 0x57, 0x9b, 0xb8, 0xc6, 0xef, 0x1a, 0xac, 0xde, 0xb3,
	0xa9, 0x73, 0x66, 0x51, 0xbc, 0x47, 0xba, 0xa1, 0x89, 0xbf, 0x1e, 0xe0, 0x90, 0x22, 0x04, 0x15,
	0x3a, 0xf4, 0xb1, 0xae, 0x35, 0xb5, 0x56, 0xd5, 0xe4, 0x67, 0xb4, 0x01, 0x73, 0xe7, 0x24, 0x38,
	0xc5, 0x81, 0x5e, 0xe2, 0x54, 0x71, 0x43, 0x3a, 0xcc, 0x53, 0xa7, 0x8f, 0xc9, 0x80, 0xea, 0xe5,
	0xa6, 0xd6, 0x2a, 0x9b, 0xf2, 0x8a, 0x6e, 0xc1, 0x4a, 0xdf, 0xfa, 0x86, 0xe9, 0x3d, 0x22, 0xd2,
	0x8a, 0x5e, 0x69, 0x6a, 0xad, 0x59, 0x33, 0xff, 0x01, 0x5d, 0x83, 0x0b, 0xc7, 0x98, 0xda, 0x27,
	0xcf, 0xac, 0xc0, 0xb1, 0xba, 0x2e, 0xd6, 0x67, 0x9b, 0xe5, 0x56, 0xd5, 0x4c, 0x13, 0xd1, 0x0d,
	0x58, 0x0a, 0x22, 0x27, 0x8f, 0x84, 0xd1, 0x39, 0x6e, 0x34, 0x43, 0x35, 0xf6, 0x60, 0x2d, 0x1d,
	0x58, 0xe8, 0x13, 0x2f, 0xc4, 0x68, 0x0b, 0x2a, 0xaf, 0x49, 0x37, 0xd4, 0xb5, 0x66, 0xb9, 0xb5,
	0xb8, 0xb5, 0xd9, 0xce, 0xa6, 0xa4, 0x2d, 0xa5, 0x7a, 0x7b, 0xa4, 0x6b, 0x72, 0x5e, 0xe3, 0xb7,
	0x32, 0xd4, 0x92, 0x64, 0x54, 0x87, 0xf2, 0x29, 0x1e, 0xf2, 0xec, 0x94, 0x4d, 0x76, 0x8c, 0x13,
	0x56, 0x4a, 0x24, 0xec, 0x0e, 0xac, 0xb2, 0x14, 0x1d, 0xbb, 0xe4, 0xbc, 0xe3, 0x85, 0xd4, 0xf2,
	0x6c, 0xfc, 0x08, 0x0f, 0x45, 0x92, 0x54, 0x9f, 0x58, 0x0a, 0xba, 0x7e, 0xdf, 0x3b, 0x0c, 0x88,
	0x8d, 0xc3, 0xb0, 0xd3, 0xe3, 0xc9, 0xaa, 0x9a, 0x69, 0x22, 0xfa, 0x18, 0x2e, 0x49, 0xe1, 0x07,
	0xf8, 0xd8, 0xf1, 0x1c, 0xea, 0x10, 0xef, 0x19, 0x0e, 0x42, 0x87, 0x78, 0xfa, 0x2c, 0x4f, 0x6f,
	0x31, 0x03, 0x6a, 0xc2, 0xa2, 0xfc, 0xc8, 0xbc, 0x89, 0xb2, 0x97, 0x24, 0xa1, 0xcb, 0x50, 0xc5,
	0x2e, 0xee, 0x63, 0x8f, 0x76, 0x7a, 0xfa, 0x3c, 0xf7, 0x60, 0x44, 0x40, 0x6d, 0x40, 0xf2, 0x92,
	0x08, 0x6a, 0x81, 0xab, 0x51, 0x7c, 0x61, 0x31, 0xd9, 0x83, 0x90, 0x92, 0xfe, 0x43, 0x6c, 0xf5,
	0x70, 0x10, 0xea, 0xd5, 0x28, 0xa6, 0x14, 0x31, 0xd1, 0x5c, 0x90, 0x6d, 0xae, 0x00, 0xd3, 0xc0,
	0xc1, 0xa1, 0xbe, 0xc8, 0x23, 0x93, 0x57, 0xd4, 0x80, 0x85, 0x1e, 0xb6, 0x7a, 0xae, 0xe3, 0x61,
	0xbd, 0xc6, 0xad, 0xc7, 0x77, 0x16, 0xc1, 0x99, 0x68, 0x98, 0x50, 0xbf, 0x10, 0x45, 0x10, 0x13,
	0x8c, 0xcf, 0xe0, 0xca, 0x36, 0xf3, 0xce, 0x7d, 0x9e, 0x29, 0x81, 0xec, 0xfe, 0x82, 0xc2, 0x69,
	0x85, 0x85, 0x33, 0x9a, 0xb0, 0x59, 0xa4, 0x32, 0xea, 0x3b, 0x63, 0x0f, 0xd0, 0x36, 0xe9, 0xfb,
	0x2e, 0xe6, 0xfd, 0x28, 0x2d, 0x6d, 0xc0, 0xdc, 0x6b, 0xd2, 0x1d, 0x29, 0x17, 0xb7, 0x74, 0x00,
	0xa5, 0x6c, 0x00, 0xeb, 0xb0, 0x9a, 0xd2, 0x25, 0x4c, 0xfc, 0xa0, 0xc1, 0x95, 0xed, 0x00, 0x5b,
	0x14, 0x17, 0x05, 0x96, 0xa9, 0xbd, 0x96, 0xaf, 0x7d, 0xae, 0x03, 0x4b, 0xaa, 0x0e, 0xd4, 0x61,
	0xfe, 0x4c, 0xf4, 0x5b, 0x39, 0xaa, 0x8a, 0xb8, 0xa6, 0x1d, 0xaf, 0x64, 0x1d, 0xff, 0x59, 0x83,
	0xcd, 0x22, 0x0f, 0xc5, 0xfb, 0xfc, 0xf7, 0x5d, 0x2c, 0xa8, 0x6e, 0xa5, 0xb8, 0xba, 0xbf, 0x6a,
	0x70, 0x53, 0xed, 0xf6, 0x73, 0x87, 0x9e, 0x98, 0x38, 0x1c, 0xb8, 0x54, 0xa6, 0xb8, 0xc3, 0x1a,
	0x96, 0x1f, 0xb9, 0xef, 0x8b, 0x5b, 0xb7, 0xf3, 0x23, 0x66, 0x6c, 0x91, 0x4c, 0x29, 0xaf, 0x18,
	0x75, 0x25, 0xd5, 0xa8, 0x63, 0x7c, 0xa9, 0x19, 0x19, 0xea, 0x65, 0x3e, 0x39, 0x33, 0x54, 0xe3,
	0x0f, 0x0d, 0x5a, 0x93, 0xc3, 0xf8, 0xef, 0xd6, 0x21, 0xdd, 0x5c, 0xb3, 0xd9, 0xe6, 0xfa, 0x0a,
	0xd6, 0x1f, 0x60, 0xdf, 0x25, 0x43, 0x19, 0x9d, 0x2c, 0xc9, 0x0e, 0x54, 0xa5, 0x36, 0x39, 0xf7,
	0x6f, 0xe6, 0x8b, 0x92, 0x91, 0x7a, 0xd2, 0x7d, 0x8d, 0x6d, 0x6a, 0x8e, 0x24, 0x8d, 0x5f, 0x34,
	0x58, 0x57, 0x32, 0xb1, 0xe1, 0xef, 0x59, 0xfd, 0x78, 0x5b, 0xb2, 0x33, 0x7a, 0x98, 0x58, 0x08,
	0x4b, 0x5b, 0xef, 0x4f, 0x69, 0xaf, 0x6d, 0xe2, 0x90, 0x0c, 0x02, 0x1b, 0x1f, 0x0d, 0x7d, 0x2c,
	0xd6, 0xc8, 0x26, 0x40, 0x2f, 0x9e, 0xe2, 0x3c, 0x89, 0x35, 0x33, 0x41, 0x31, 0x6e, 0x41, 0x2d,
	0x29, 0x85, 0x16, 0xa0, 0xb2, 0xdb, 0xd9, 0xdf, 0xa9, 0xcf, 0xb0, 0xd3, 0xfd, 0xc3, 0x83, 0xc7,
	0x75, 0x8d, 0x9d, 0x5e, 0xdc, 0x3b, 0xd8, 0xaf, 0x97, 0x0c, 0x17, 0x36, 0xb2, 0x59, 0x12, 0x15,
	0xcf, 0x2f, 0xb5, 0x4f, 0x92, 0x89, 0x2b, 0xf1, 0xc4, 0x19, 0xc5, 0x81, 0x1c, 0x60, 0x6a, 0xf5,
	0x2c, 0x6a, 0x25, 0x73, 0xf6, 0x9d, 0x06, 0xf5, 0xec, 0xf7, 0x7c, 0xe3, 0x68, 0x13, 0x1a, 0xa7,
	0x94, 0x6e, 0x9c, 0x4c, 0x6b, 0x96, 0xf3, 0xad, 0x69, 0x40, 0x2d, 0x10, 0x29, 0x79, 0xcc, 0x0a,
	0x13, 0x0d, 0xa2, 0x14, 0xcd, 0x38, 0x86, 0xa5, 0x5d, 0xcb, 0x71, 0xa7, 0x18, 0xc6, 0x89, 0x1d,
	0x54, 0x4a, 0xef, 0x20, 0x03, 0x6a, 0x38, 0x08, 0x48, 0x70, 0x80, 0xc3, 0xd0, 0x7a, 0x85, 0xb9,
	0x2b, 0x55, 0x33, 0x45, 0x33, 0x56, 0x60, 0x39, 0xb6, 0x23, 0x06, 0x75, 0x1f, 0x56, 0x8e, 0x4e,
	0x02, 0x72, 0xbe, 0xc3, 0xf8, 0xa6, 0x58, 0x05, 0x5c, 0xdf, 0x36, 0xe9, 0x49, 0x78, 0x31, 0x22,
	0x4c, 0xe5, 0xc1, 0x1a, 0xa0, 0xa4, 0x39, 0xe1, 0xc4, 0x4f, 0x1a, 0xac, 0x1f, 0x0e, 0xba, 0xae,
	0x13, 0x9e, 0x08, 0xc6, 0x04, 0xf8, 0xcb, 0xb5, 0xf3, 0x0d, 0x58, 0xb2, 0x49, 0x10, 0x60, 0xd7,
	0x62, 0x3d, 0xc7, 0xbc, 0x8c, 0x5c, 0xc9, 0x50, 0x59, 0xb3, 0x32, 0xf4, 0x77, 0x44, 0xf6, 0x9d,
	0x33, 0x2c, 0x4a, 0x93, 0xa0, 0xb0, 0x68, 0xfa, 0x91, 0xb5, 0x18, 0xdd, 0x8c, 0x08, 0x13, 0x1e,
	0xb8, 0x0e, 0x1b, 0x59, 0x87, 0x45, 0x2c, 0x77, 0x61, 0x83, 0x3d, 0x01, 0xf7, 0x0c, 0x77, 0x3c,
	0xdb, 0xe9, 0x61, 0x8f, 0x26, 0x36, 0x9e, 0x23, 0x48, 0x89, 0x31, 0x96, 0x20, 0x19, 0x97, 0xe0,
	0x62, 0x4e, 0x56, 0xa8, 0x5d, 0x81, 0xe5, 0x23, 0xe2, 0x13, 0x97, 0xbc, 0x1a, 0x0a, 0x7d, 0xc6,
	0x9f, 0x1a, 0xd4, 0x47, 0x34, 0xf1, 0x72, 0x3e, 0x80, 0xf9, 0x6e, 0x40, 0x4e, 0x19, 0xb8, 0x89,
	0xc6, 0xcb, 0xe5, 0xfc, 0x2b, 0xb9, 0xcf, 0x19, 0x3a, 0xde, 0x31, 0x31, 0x25, 0x33, 0x73, 0xce,
	0x76, 0x07, 0x21, 0xc5, 0xc1, 0x53, 0xe7, 0x0d, 0x16, 0xcd, 0x95, 0x24, 0xa1, 0x16, 0x2c, 0xfb,
	0x56, 0x40, 0xf9, 0x43, 0x0f, 0xb7, 0xc9, 0xc0, 0xa3, 0x62, 0x8a, 0x66, 0xc9, 0x0c, 0x6b, 0x07,
	0xd8, 0x77, 0x1d, 0x9b, 0x97, 0x62, 0xd7, 0xb2, 0x29, 0x09, 0x24, 0xd6, 0xce, 0x7d, 0x60, 0xe5,
	0x14, 0x1e, 0x26, 0x71, 0x63, 0xd5, 0xcc, 0x50, 0x8d, 0x1f, 0x35, 0x80, 0x91, 0xe7, 0xac, 0x47,
	0x3d, 0xd2, 0xc3, 0xe2, 0xc9, 0xce, 0x9a, 0xe2, 0xc6, 0x3a, 0xe6, 0x84, 0x84, 0x54, 0xa2, 0x5f,
	0x76, 0x66, 0x34, 0x9f, 0x04, 0xd2, 0x5f, 0x7e, 0x46, 0x1f, 0x01, 0x8c, 0xfc, 0xd6, 0x2b, 0x3c,
	0x57, 0xff, 0xcb, 0xe7, 0xea, 0x50, 0xf2, 0x98, 0x09, 0xf6, 0xe4, 0x40, 0x88, 0x9c, 0x95, 0x57,
	0xe6, 0x65, 0x35, 0x96, 0x61, 0x59, 0x8d, 0xa5, 0x62, 0x4f, 0x93, 0x24, 0xb4, 0x0d, 0x95, 0x80,
	0xb8, 0x72, 0x36, 0xdf, 0x1e, 0xe3, 0xc0, 0xe8, 0x14, 0x65, 0xc1, 0x24, 0x2e, 0x36, 0xb9, 0xb0,
	0x71, 0x1b, 0x56, 0x15, 0x1f, 0x11, 0xc0, 0xdc, 0xfe, 0xce, 0xbd, 0x07, 0x3b, 0x66, 0x7d, 0x06,
	0xd5, 0x60, 0x61, 0xf7, 0xc9, 0xfe, 0xfe, 0x93, 0xe7, 0x3b, 0x66, 0x5d, 0x33, 0x1e, 0xc1, 0xc5,
	0xcf, 0xfd, 0x9e, 0x25, 0x30, 0x1b, 0x1f, 0x20, 0x6f, 0x3d, 0x79, 0x8c, 0x06, 0xe8, 0x79, 0x65,
	0xa2, 0x6d, 0x87, 0xb0, 0xfa, 0x14, 0xd3, 0x78, 0xef, 0x4b, 0x23, 0x6a, 0xe0, 0xae, 0x15, 0x02,
	0xf7, 0xb1, 0x18, 0x14, 0xad, 0xc1, 0xac, 0x4b, 0x6c, 0xcb, 0xe5, 0xf5, 0x5d, 0x30, 0xa3, 0x8b,
	0xd1, 0x82, 0xb5, 0xb4, 0xe9, 0xa2, 0xdd, 0xb2, 0xf5, 0x17, 0xc0, 0xfc, 0xa7, 0x51, 0xde, 0x91,
	0x35, 0xfa, 0x79, 0xc5, 0x7e, 0xab, 0xa1, 0xeb, 0xc5, 0xbf, 0xca, 0x12, 0x3f, 0x52, 0x1b, 0x37,
	0x26, 0xb1, 0x89, 0x7c, 0xcc, 0xdc, 0xd1, 0xd0, 0xb7, 0xb0, 0xa1, 0x06, 0xe8, 0x48, 0x85, 0xcf,
	0xc6, 0xfd, 0x3a, 0x68, 0xdc, 0x99, 0x5e, 0x40, 0x3a, 0x80, 0xbe, 0x84, 0xc5, 0x04, 0x62, 0x47,
	0xd7, 0x14, 0x2a, 0x72, 0x3f, 0x0e, 0x1a, 0xd7, 0x27, 0x70, 0xc5, 0xda, 0x59, 0x70, 0x4a, 0x5c,
	0x87, 0xfe, 0x29, 0xf8, 0x54, 0x06, 0x37, 0x16, 0xb0, 0x1b, 0x33, 0xe8, 0x7b, 0x0d, 0x9a, 0x93,
	0x70, 0x25, 0xfa, 0x70, 0x5a, 0xc5, 0x39, 0x48, 0xdd, 0xb8, 0xfb, 0x36, 0xa2, 0xb1, 0x77, 0x18,
	0x96, 0xd2, 0x80, 0x07, 0x29, 0xc0, 0x9f, 0x12, 0x38, 0x36, 0x5a, 0x93, 0x19, 0x63, 0x33, 0x87,
	0x30, 0x2f, 0xd6, 0x3c, 0x6a, 0xe6, 0xc5, 0xd2, 0x48, 0xa3, 0x71, 0x75, 0x0c, 0x47, 0xac, 0xf1,
	0x05, 0xc0, 0x68, 0x6d, 0xa3, 0xff, 0xe7, 0x45, 0x72, 0x18, 0xa2, 0x71, 0x6d, 0x3c, 0x53, 0x32,
	0x27, 0xe9, 0x4d, 0xaa, 0xca, 0x89, 0x12, 0x1c, 0xa8, 0x72, 0x52, 0xb0, 0x94, 0x67, 0xd0, 0x09,
	0x2c, 0x67, 0x56, 0x2b, 0x52, 0x88, 0xab, 0x37, 0x77, 0xe3, 0x9d, 0x29, 0x38, 0x63, 0x4b, 0x2f,
	0xa1, 0x96, 0x9c, 0x3b, 0xaa, 0x09, 0xa2, 0x18, 0x89, 0xaa, 0x09, 0xa2, 0x1a, 0x5f, 0xc6, 0x0c,
	0x7a, 0x0a, 0x0b, 0x72, 0xed, 0x23, 0x45, 0xf5, 0x32, 0x30, 0xa1, 0x61, 0x8c, 0x63, 0x89, 0x95,
	0x9e, 0x42, 0x3d, 0x3b, 0xc4, 0x91, 0x22, 0xec, 0x82, 0xad, 0xd1, 0x78, 0x77, 0x1a, 0x56, 0x69,
	0xec, 0xfe, 0x55, 0xb8, 0xe4, 0x90, 0xf6, 0x1b, 0x8c, 0xbb, 0xb8, 0x9d, 0xfa, 0x5b, 0xd0, 0x26,
	0xee, 0xe1, 0xcc, 0x17, 0x25, 0xbf, 0xdb, 0x9d, 0xe3, 0xf7, 0xf7, 0xfe, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0xc4, 0xca, 0x2d, 0x2f, 0x37, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GatewayClient is the client API for Gateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayClient interface {
	//
	//Iterates through all known partitions round-robin and activates up to the requested
	//maximum and streams them back to the client as they are activated.
	//
	//Errors:
	//INVALID_ARGUMENT:
	//- type is blank (empty string, null)
	//- worker is blank (empty string, null)
	//- timeout less than 1
	//- maxJobsToActivate is less than 1
	ActivateJobs(ctx context.Context, in *ActivateJobsRequest, opts ...grpc.CallOption) (Gateway_ActivateJobsClient, error)
	//
	//Cancels a running workflow instance
	//
	//Errors:
	//NOT_FOUND:
	//- no workflow instance exists with the given key
	CancelWorkflowInstance(ctx context.Context, in *CancelWorkflowInstanceRequest, opts ...grpc.CallOption) (*CancelWorkflowInstanceResponse, error)
	//
	//Completes a job with the given variables, which allows completing the associated service task.
	//
	//Errors:
	//NOT_FOUND:
	//- no job exists with the given job key. Note that since jobs are removed once completed,
	//it could be that this job did exist at some point.
	//
	//FAILED_PRECONDITION:
	//- the job was marked as failed. In that case, the related incident must be resolved before
	//the job can be activated again and completed.
	CompleteJob(ctx context.Context, in *CompleteJobRequest, opts ...grpc.CallOption) (*CompleteJobResponse, error)
	//
	//Creates and starts an instance of the specified workflow. The workflow definition to use to
	//create the instance can be specified either using its unique key (as returned by
	//DeployWorkflow), or using the BPMN process ID and a version. Pass -1 as the version to use the
	//latest deployed version. Note that only workflows with none start events can be started through
	//this command.
	//
	//Errors:
	//NOT_FOUND:
	//- no workflow with the given key exists (if workflowKey was given)
	//- no workflow with the given process ID exists (if bpmnProcessId was given but version was -1)
	//- no workflow with the given process ID and version exists (if both bpmnProcessId and version were given)
	//
	//FAILED_PRECONDITION:
	//- the workflow definition does not contain a none start event; only workflows with none
	//start event can be started manually.
	//
	//INVALID_ARGUMENT:
	//- the given variables argument is not a valid JSON document; it is expected to be a valid
	//JSON document where the root node is an object.
	CreateWorkflowInstance(ctx context.Context, in *CreateWorkflowInstanceRequest, opts ...grpc.CallOption) (*CreateWorkflowInstanceResponse, error)
	//
	//Behaves similarly to `rpc CreateWorkflowInstance`, except that a successful response is received when the workflow completes successfully.
	CreateWorkflowInstanceWithResult(ctx context.Context, in *CreateWorkflowInstanceWithResultRequest, opts ...grpc.CallOption) (*CreateWorkflowInstanceWithResultResponse, error)
	//
	//Deploys one or more workflows to Zeebe. Note that this is an atomic call,
	//i.e. either all workflows are deployed, or none of them are.
	//
	//Errors:
	//INVALID_ARGUMENT:
	//- no resources given.
	//- if at least one resource is invalid. A resource is considered invalid if:
	//- it is not a BPMN or YAML file (currently detected through the file extension)
	//- the resource data is not deserializable (e.g. detected as BPMN, but it's broken XML)
	//- the workflow is invalid (e.g. an event-based gateway has an outgoing sequence flow to a task)
	DeployWorkflow(ctx context.Context, in *DeployWorkflowRequest, opts ...grpc.CallOption) (*DeployWorkflowResponse, error)
	//
	//Marks the job as failed; if the retries argument is positive, then the job will be immediately
	//activatable again, and a worker could try again to process it. If it is zero or negative however,
	//an incident will be raised, tagged with the given errorMessage, and the job will not be
	//activatable until the incident is resolved.
	//
	//Errors:
	//NOT_FOUND:
	//- no job was found with the given key
	//
	//FAILED_PRECONDITION:
	//- the job was not activated
	//- the job is already in a failed state, i.e. ran out of retries
	FailJob(ctx context.Context, in *FailJobRequest, opts ...grpc.CallOption) (*FailJobResponse, error)
	//
	//Reports a business error (i.e. non-technical) that occurs while processing a job. The error is handled in the workflow by an error catch event. If there is no error catch event with the specified errorCode then an incident will be raised instead.
	//
	//Errors:
	//NOT_FOUND:
	//- no job was found with the given key
	//
	//FAILED_PRECONDITION:
	//- the job is not in an activated state
	ThrowError(ctx context.Context, in *ThrowErrorRequest, opts ...grpc.CallOption) (*ThrowErrorResponse, error)
	//
	//Publishes a single message. Messages are published to specific partitions computed from their
	//correlation keys.
	//
	//Errors:
	//ALREADY_EXISTS:
	//- a message with the same ID was previously published (and is still alive)
	PublishMessage(ctx context.Context, in *PublishMessageRequest, opts ...grpc.CallOption) (*PublishMessageResponse, error)
	//
	//Resolves a given incident. This simply marks the incident as resolved; most likely a call to
	//UpdateJobRetries or SetVariables will be necessary to actually resolve the
	//problem, following by this call.
	//
	//Errors:
	//NOT_FOUND:
	//- no incident with the given key exists
	ResolveIncident(ctx context.Context, in *ResolveIncidentRequest, opts ...grpc.CallOption) (*ResolveIncidentResponse, error)
	//
	//Updates all the variables of a particular scope (e.g. workflow instance, flow element instance)
	//from the given JSON document.
	//
	//Errors:
	//NOT_FOUND:
	//- no element with the given elementInstanceKey exists
	//INVALID_ARGUMENT:
	//- the given variables document is not a valid JSON document; valid documents are expected to
	//be JSON documents where the root node is an object.
	SetVariables(ctx context.Context, in *SetVariablesRequest, opts ...grpc.CallOption) (*SetVariablesResponse, error)
	//
	//Obtains the current topology of the cluster the gateway is part of.
	Topology(ctx context.Context, in *TopologyRequest, opts ...grpc.CallOption) (*TopologyResponse, error)
	//
	//Updates the number of retries a job has left. This is mostly useful for jobs that have run out of
	//retries, should the underlying problem be solved.
	//
	//Errors:
	//NOT_FOUND:
	//- no job exists with the given key
	//
	//INVALID_ARGUMENT:
	//- retries is not greater than 0
	UpdateJobRetries(ctx context.Context, in *UpdateJobRetriesRequest, opts ...grpc.CallOption) (*UpdateJobRetriesResponse, error)
}

type gatewayClient struct {
	cc *grpc.ClientConn
}

func NewGatewayClient(cc *grpc.ClientConn) GatewayClient {
	return &gatewayClient{cc}
}

func (c *gatewayClient) ActivateJobs(ctx context.Context, in *ActivateJobsRequest, opts ...grpc.CallOption) (Gateway_ActivateJobsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Gateway_serviceDesc.Streams[0], "/gateway_protocol.Gateway/ActivateJobs", opts...)
	if err != nil {
		return nil, err
	}
	x := &gatewayActivateJobsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Gateway_ActivateJobsClient interface {
	Recv() (*ActivateJobsResponse, error)
	grpc.ClientStream
}

type gatewayActivateJobsClient struct {
	grpc.ClientStream
}

func (x *gatewayActivateJobsClient) Recv() (*ActivateJobsResponse, error) {
	m := new(ActivateJobsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gatewayClient) CancelWorkflowInstance(ctx context.Context, in *CancelWorkflowInstanceRequest, opts ...grpc.CallOption) (*CancelWorkflowInstanceResponse, error) {
	out := new(CancelWorkflowInstanceResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/CancelWorkflowInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) CompleteJob(ctx context.Context, in *CompleteJobRequest, opts ...grpc.CallOption) (*CompleteJobResponse, error) {
	out := new(CompleteJobResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/CompleteJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) CreateWorkflowInstance(ctx context.Context, in *CreateWorkflowInstanceRequest, opts ...grpc.CallOption) (*CreateWorkflowInstanceResponse, error) {
	out := new(CreateWorkflowInstanceResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/CreateWorkflowInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) CreateWorkflowInstanceWithResult(ctx context.Context, in *CreateWorkflowInstanceWithResultRequest, opts ...grpc.CallOption) (*CreateWorkflowInstanceWithResultResponse, error) {
	out := new(CreateWorkflowInstanceWithResultResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/CreateWorkflowInstanceWithResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) DeployWorkflow(ctx context.Context, in *DeployWorkflowRequest, opts ...grpc.CallOption) (*DeployWorkflowResponse, error) {
	out := new(DeployWorkflowResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/DeployWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) FailJob(ctx context.Context, in *FailJobRequest, opts ...grpc.CallOption) (*FailJobResponse, error) {
	out := new(FailJobResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/FailJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) ThrowError(ctx context.Context, in *ThrowErrorRequest, opts ...grpc.CallOption) (*ThrowErrorResponse, error) {
	out := new(ThrowErrorResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/ThrowError", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) PublishMessage(ctx context.Context, in *PublishMessageRequest, opts ...grpc.CallOption) (*PublishMessageResponse, error) {
	out := new(PublishMessageResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/PublishMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) ResolveIncident(ctx context.Context, in *ResolveIncidentRequest, opts ...grpc.CallOption) (*ResolveIncidentResponse, error) {
	out := new(ResolveIncidentResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/ResolveIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) SetVariables(ctx context.Context, in *SetVariablesRequest, opts ...grpc.CallOption) (*SetVariablesResponse, error) {
	out := new(SetVariablesResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/SetVariables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) Topology(ctx context.Context, in *TopologyRequest, opts ...grpc.CallOption) (*TopologyResponse, error) {
	out := new(TopologyResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/Topology", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) UpdateJobRetries(ctx context.Context, in *UpdateJobRetriesRequest, opts ...grpc.CallOption) (*UpdateJobRetriesResponse, error) {
	out := new(UpdateJobRetriesResponse)
	err := c.cc.Invoke(ctx, "/gateway_protocol.Gateway/UpdateJobRetries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewayServer is the server API for Gateway service.
type GatewayServer interface {
	//
	//Iterates through all known partitions round-robin and activates up to the requested
	//maximum and streams them back to the client as they are activated.
	//
	//Errors:
	//INVALID_ARGUMENT:
	//- type is blank (empty string, null)
	//- worker is blank (empty string, null)
	//- timeout less than 1
	//- maxJobsToActivate is less than 1
	ActivateJobs(*ActivateJobsRequest, Gateway_ActivateJobsServer) error
	//
	//Cancels a running workflow instance
	//
	//Errors:
	//NOT_FOUND:
	//- no workflow instance exists with the given key
	CancelWorkflowInstance(context.Context, *CancelWorkflowInstanceRequest) (*CancelWorkflowInstanceResponse, error)
	//
	//Completes a job with the given variables, which allows completing the associated service task.
	//
	//Errors:
	//NOT_FOUND:
	//- no job exists with the given job key. Note that since jobs are removed once completed,
	//it could be that this job did exist at some point.
	//
	//FAILED_PRECONDITION:
	//- the job was marked as failed. In that case, the related incident must be resolved before
	//the job can be activated again and completed.
	CompleteJob(context.Context, *CompleteJobRequest) (*CompleteJobResponse, error)
	//
	//Creates and starts an instance of the specified workflow. The workflow definition to use to
	//create the instance can be specified either using its unique key (as returned by
	//DeployWorkflow), or using the BPMN process ID and a version. Pass -1 as the version to use the
	//latest deployed version. Note that only workflows with none start events can be started through
	//this command.
	//
	//Errors:
	//NOT_FOUND:
	//- no workflow with the given key exists (if workflowKey was given)
	//- no workflow with the given process ID exists (if bpmnProcessId was given but version was -1)
	//- no workflow with the given process ID and version exists (if both bpmnProcessId and version were given)
	//
	//FAILED_PRECONDITION:
	//- the workflow definition does not contain a none start event; only workflows with none
	//start event can be started manually.
	//
	//INVALID_ARGUMENT:
	//- the given variables argument is not a valid JSON document; it is expected to be a valid
	//JSON document where the root node is an object.
	CreateWorkflowInstance(context.Context, *CreateWorkflowInstanceRequest) (*CreateWorkflowInstanceResponse, error)
	//
	//Behaves similarly to `rpc CreateWorkflowInstance`, except that a successful response is received when the workflow completes successfully.
	CreateWorkflowInstanceWithResult(context.Context, *CreateWorkflowInstanceWithResultRequest) (*CreateWorkflowInstanceWithResultResponse, error)
	//
	//Deploys one or more workflows to Zeebe. Note that this is an atomic call,
	//i.e. either all workflows are deployed, or none of them are.
	//
	//Errors:
	//INVALID_ARGUMENT:
	//- no resources given.
	//- if at least one resource is invalid. A resource is considered invalid if:
	//- it is not a BPMN or YAML file (currently detected through the file extension)
	//- the resource data is not deserializable (e.g. detected as BPMN, but it's broken XML)
	//- the workflow is invalid (e.g. an event-based gateway has an outgoing sequence flow to a task)
	DeployWorkflow(context.Context, *DeployWorkflowRequest) (*DeployWorkflowResponse, error)
	//
	//Marks the job as failed; if the retries argument is positive, then the job will be immediately
	//activatable again, and a worker could try again to process it. If it is zero or negative however,
	//an incident will be raised, tagged with the given errorMessage, and the job will not be
	//activatable until the incident is resolved.
	//
	//Errors:
	//NOT_FOUND:
	//- no job was found with the given key
	//
	//FAILED_PRECONDITION:
	//- the job was not activated
	//- the job is already in a failed state, i.e. ran out of retries
	FailJob(context.Context, *FailJobRequest) (*FailJobResponse, error)
	//
	//Reports a business error (i.e. non-technical) that occurs while processing a job. The error is handled in the workflow by an error catch event. If there is no error catch event with the specified errorCode then an incident will be raised instead.
	//
	//Errors:
	//NOT_FOUND:
	//- no job was found with the given key
	//
	//FAILED_PRECONDITION:
	//- the job is not in an activated state
	ThrowError(context.Context, *ThrowErrorRequest) (*ThrowErrorResponse, error)
	//
	//Publishes a single message. Messages are published to specific partitions computed from their
	//correlation keys.
	//
	//Errors:
	//ALREADY_EXISTS:
	//- a message with the same ID was previously published (and is still alive)
	PublishMessage(context.Context, *PublishMessageRequest) (*PublishMessageResponse, error)
	//
	//Resolves a given incident. This simply marks the incident as resolved; most likely a call to
	//UpdateJobRetries or SetVariables will be necessary to actually resolve the
	//problem, following by this call.
	//
	//Errors:
	//NOT_FOUND:
	//- no incident with the given key exists
	ResolveIncident(context.Context, *ResolveIncidentRequest) (*ResolveIncidentResponse, error)
	//
	//Updates all the variables of a particular scope (e.g. workflow instance, flow element instance)
	//from the given JSON document.
	//
	//Errors:
	//NOT_FOUND:
	//- no element with the given elementInstanceKey exists
	//INVALID_ARGUMENT:
	//- the given variables document is not a valid JSON document; valid documents are expected to
	//be JSON documents where the root node is an object.
	SetVariables(context.Context, *SetVariablesRequest) (*SetVariablesResponse, error)
	//
	//Obtains the current topology of the cluster the gateway is part of.
	Topology(context.Context, *TopologyRequest) (*TopologyResponse, error)
	//
	//Updates the number of retries a job has left. This is mostly useful for jobs that have run out of
	//retries, should the underlying problem be solved.
	//
	//Errors:
	//NOT_FOUND:
	//- no job exists with the given key
	//
	//INVALID_ARGUMENT:
	//- retries is not greater than 0
	UpdateJobRetries(context.Context, *UpdateJobRetriesRequest) (*UpdateJobRetriesResponse, error)
}

// UnimplementedGatewayServer can be embedded to have forward compatible implementations.
type UnimplementedGatewayServer struct {
}

func (*UnimplementedGatewayServer) ActivateJobs(req *ActivateJobsRequest, srv Gateway_ActivateJobsServer) error {
	return status.Errorf(codes.Unimplemented, "method ActivateJobs not implemented")
}
func (*UnimplementedGatewayServer) CancelWorkflowInstance(ctx context.Context, req *CancelWorkflowInstanceRequest) (*CancelWorkflowInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelWorkflowInstance not implemented")
}
func (*UnimplementedGatewayServer) CompleteJob(ctx context.Context, req *CompleteJobRequest) (*CompleteJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteJob not implemented")
}
func (*UnimplementedGatewayServer) CreateWorkflowInstance(ctx context.Context, req *CreateWorkflowInstanceRequest) (*CreateWorkflowInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflowInstance not implemented")
}
func (*UnimplementedGatewayServer) CreateWorkflowInstanceWithResult(ctx context.Context, req *CreateWorkflowInstanceWithResultRequest) (*CreateWorkflowInstanceWithResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflowInstanceWithResult not implemented")
}
func (*UnimplementedGatewayServer) DeployWorkflow(ctx context.Context, req *DeployWorkflowRequest) (*DeployWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployWorkflow not implemented")
}
func (*UnimplementedGatewayServer) FailJob(ctx context.Context, req *FailJobRequest) (*FailJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FailJob not implemented")
}
func (*UnimplementedGatewayServer) ThrowError(ctx context.Context, req *ThrowErrorRequest) (*ThrowErrorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ThrowError not implemented")
}
func (*UnimplementedGatewayServer) PublishMessage(ctx context.Context, req *PublishMessageRequest) (*PublishMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishMessage not implemented")
}
func (*UnimplementedGatewayServer) ResolveIncident(ctx context.Context, req *ResolveIncidentRequest) (*ResolveIncidentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResolveIncident not implemented")
}
func (*UnimplementedGatewayServer) SetVariables(ctx context.Context, req *SetVariablesRequest) (*SetVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVariables not implemented")
}
func (*UnimplementedGatewayServer) Topology(ctx context.Context, req *TopologyRequest) (*TopologyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Topology not implemented")
}
func (*UnimplementedGatewayServer) UpdateJobRetries(ctx context.Context, req *UpdateJobRetriesRequest) (*UpdateJobRetriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJobRetries not implemented")
}

func RegisterGatewayServer(s *grpc.Server, srv GatewayServer) {
	s.RegisterService(&_Gateway_serviceDesc, srv)
}

func _Gateway_ActivateJobs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ActivateJobsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GatewayServer).ActivateJobs(m, &gatewayActivateJobsServer{stream})
}

type Gateway_ActivateJobsServer interface {
	Send(*ActivateJobsResponse) error
	grpc.ServerStream
}

type gatewayActivateJobsServer struct {
	grpc.ServerStream
}

func (x *gatewayActivateJobsServer) Send(m *ActivateJobsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Gateway_CancelWorkflowInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelWorkflowInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CancelWorkflowInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/CancelWorkflowInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CancelWorkflowInstance(ctx, req.(*CancelWorkflowInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_CompleteJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CompleteJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/CompleteJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CompleteJob(ctx, req.(*CompleteJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_CreateWorkflowInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CreateWorkflowInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/CreateWorkflowInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CreateWorkflowInstance(ctx, req.(*CreateWorkflowInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_CreateWorkflowInstanceWithResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowInstanceWithResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CreateWorkflowInstanceWithResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/CreateWorkflowInstanceWithResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CreateWorkflowInstanceWithResult(ctx, req.(*CreateWorkflowInstanceWithResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_DeployWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).DeployWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/DeployWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).DeployWorkflow(ctx, req.(*DeployWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_FailJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FailJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).FailJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/FailJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).FailJob(ctx, req.(*FailJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_ThrowError_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThrowErrorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).ThrowError(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/ThrowError",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).ThrowError(ctx, req.(*ThrowErrorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_PublishMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).PublishMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/PublishMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).PublishMessage(ctx, req.(*PublishMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_ResolveIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolveIncidentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).ResolveIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/ResolveIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).ResolveIncident(ctx, req.(*ResolveIncidentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_SetVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).SetVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/SetVariables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).SetVariables(ctx, req.(*SetVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_Topology_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopologyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).Topology(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/Topology",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).Topology(ctx, req.(*TopologyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_UpdateJobRetries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobRetriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).UpdateJobRetries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway_protocol.Gateway/UpdateJobRetries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).UpdateJobRetries(ctx, req.(*UpdateJobRetriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gateway_protocol.Gateway",
	HandlerType: (*GatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CancelWorkflowInstance",
			Handler:    _Gateway_CancelWorkflowInstance_Handler,
		},
		{
			MethodName: "CompleteJob",
			Handler:    _Gateway_CompleteJob_Handler,
		},
		{
			MethodName: "CreateWorkflowInstance",
			Handler:    _Gateway_CreateWorkflowInstance_Handler,
		},
		{
			MethodName: "CreateWorkflowInstanceWithResult",
			Handler:    _Gateway_CreateWorkflowInstanceWithResult_Handler,
		},
		{
			MethodName: "DeployWorkflow",
			Handler:    _Gateway_DeployWorkflow_Handler,
		},
		{
			MethodName: "FailJob",
			Handler:    _Gateway_FailJob_Handler,
		},
		{
			MethodName: "ThrowError",
			Handler:    _Gateway_ThrowError_Handler,
		},
		{
			MethodName: "PublishMessage",
			Handler:    _Gateway_PublishMessage_Handler,
		},
		{
			MethodName: "ResolveIncident",
			Handler:    _Gateway_ResolveIncident_Handler,
		},
		{
			MethodName: "SetVariables",
			Handler:    _Gateway_SetVariables_Handler,
		},
		{
			MethodName: "Topology",
			Handler:    _Gateway_Topology_Handler,
		},
		{
			MethodName: "UpdateJobRetries",
			Handler:    _Gateway_UpdateJobRetries_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ActivateJobs",
			Handler:       _Gateway_ActivateJobs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "gateway.proto",
}
