// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/camunda-cloud/zeebe/clients/go/pkg/worker (interfaces: JobWorkerMetrics)

// Package mock_pb is a generated GoMock package.
package mock_pb

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockJobWorkerMetrics is a mock of JobWorkerMetrics interface
type MockJobWorkerMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockJobWorkerMetricsMockRecorder
}

// MockJobWorkerMetricsMockRecorder is the mock recorder for MockJobWorkerMetrics
type MockJobWorkerMetricsMockRecorder struct {
	mock *MockJobWorkerMetrics
}

// NewMockJobWorkerMetrics creates a new mock instance
func NewMockJobWorkerMetrics(ctrl *gomock.Controller) *MockJobWorkerMetrics {
	mock := &MockJobWorkerMetrics{ctrl: ctrl}
	mock.recorder = &MockJobWorkerMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJobWorkerMetrics) EXPECT() *MockJobWorkerMetricsMockRecorder {
	return m.recorder
}

// SetJobsRemainingCount mocks base method
func (m *MockJobWorkerMetrics) SetJobsRemainingCount(arg0 string, arg1 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetJobsRemainingCount", arg0, arg1)
}

// SetJobsRemainingCount indicates an expected call of SetJobsRemainingCount
func (mr *MockJobWorkerMetricsMockRecorder) SetJobsRemainingCount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetJobsRemainingCount", reflect.TypeOf((*MockJobWorkerMetrics)(nil).SetJobsRemainingCount), arg0, arg1)
}
